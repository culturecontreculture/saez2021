-- ========================================
-- APOCALYPSE - MIGRATION SQL
-- Système de choix de format CD/Vinyle
-- ========================================

-- Table pour stocker les choix de format détaillés
CREATE TABLE IF NOT EXISTS public.format_choices (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  customer_id bigint NOT NULL REFERENCES customers(id) ON DELETE CASCADE,
  pack_type text NOT NULL CHECK (pack_type IN ('melancolie', 'symphonie')),
  format text NOT NULL CHECK (format IN ('cd', 'vinyle')),
  quantite smallint NOT NULL CHECK (quantite > 0),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now()
);

-- Index pour performance
CREATE INDEX IF NOT EXISTS idx_format_choices_customer ON format_choices(customer_id);

-- Table pour les magic links
CREATE TABLE IF NOT EXISTS public.magic_links (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  customer_id bigint NOT NULL REFERENCES customers(id) ON DELETE CASCADE,
  token text UNIQUE NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone NOT NULL,
  used boolean DEFAULT false
);

-- Index pour performance
CREATE INDEX IF NOT EXISTS idx_magic_links_token ON magic_links(token);
CREATE INDEX IF NOT EXISTS idx_magic_links_expires ON magic_links(expires_at);

-- Ajouter colonnes de tracking dans customers
ALTER TABLE public.customers 
ADD COLUMN IF NOT EXISTS format_choice_completed boolean DEFAULT false,
ADD COLUMN IF NOT EXISTS format_choice_date timestamp with time zone NULL;

-- ========================================
-- REQUÊTES UTILES POUR L'ADMINISTRATION
-- ========================================

-- Voir tous les choix effectués par les clients
-- SELECT 
--   c.email,
--   c.prenom,
--   c.nom,
--   fc.pack_type,
--   fc.format,
--   fc.quantite,
--   c.format_choice_date
-- FROM customers c
-- LEFT JOIN format_choices fc ON c.id = fc.customer_id
-- WHERE c.melancolie > 0 OR c.symphonie > 0
-- ORDER BY c.format_choice_date DESC;

-- Voir les clients qui n'ont pas encore fait leur choix
-- SELECT email, prenom, nom, melancolie, symphonie
-- FROM customers
-- WHERE (melancolie > 0 OR symphonie > 0)
-- AND (format_choice_completed = false OR format_choice_completed IS NULL);

-- Compter les formats choisis
-- SELECT 
--   pack_type,
--   format,
--   SUM(quantite) as total
-- FROM format_choices
-- GROUP BY pack_type, format
-- ORDER BY pack_type, format;

-- Nettoyer les tokens expirés (à exécuter périodiquement)
-- DELETE FROM magic_links WHERE expires_at < NOW();
